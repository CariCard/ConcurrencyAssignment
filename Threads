


class Threads extends Thread {

private int[] arr;

private int low, high, partial;

public void Summation(int[] arr, int low, int high)

{

this.arr = arr;

this.low = low;

}

public int getPartialSum()

{

return partial;

}

public void run()

{

partial = sum(arr, low, high);

}

public static int sum(int[] arr)

{

return sum(arr, 0, arr.length);

}

public static int sum(int[] arr, int low, int high)

{

int total = 0;

for (int i = low; i < high; i++) {

total += arr[i];

}

return total;

}

public static int parallelSum(int[] arr)

{

return parallelSum(arr, Runtime.getRuntime().availableProcessors());

}

public static int parallelSum(int[] arr, int threads)


int total = 0;

for (Threads sum : sums) {

total += sum.getPartialSum();

}

return total;

}

}

